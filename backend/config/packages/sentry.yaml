when@prod:
    sentry:
        dsn: '%env(SENTRY_DSN)%'
        options:
            send_default_pii: false
            release: '%APP_VERSION% (%APP_COMMIT%)'
            environment: '%kernel.environment%'
            ignore_exceptions:
                - 'Symfony\Component\ErrorHandler\Error\FatalError'
                - 'Symfony\Component\Debug\Exception\FatalErrorException'

        register_error_listener: false
        register_error_handler: false

    monolog:
        handlers:
            # Use this only if you don't want to use structured logging and instead receive
            # certain log levels as errors.
            sentry:
                type: sentry
                level: !php/const Monolog\Logger::ERROR
                hub_id: Sentry\State\HubInterface
                fill_extra_context: true # Enables sending monolog context to Sentry
                process_psr_3_messages: false # Disables the resolution of PSR-3 placeholders

            # Use this for structured log integration
            sentry_logs:
                type: service
                id: Sentry\SentryBundle\Monolog\LogsHandler

    services:
        Sentry\SentryBundle\Monolog\LogsHandler:
            arguments:
                - !php/const Monolog\Logger::INFO

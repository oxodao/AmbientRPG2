/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as UnauthenticatedRouteRouteImport } from './routes/_unauthenticated/route'
import { Route as AuthenticatedRouteRouteImport } from './routes/_authenticated/route'
import { Route as AuthenticatedIndexRouteImport } from './routes/_authenticated/index'
import { Route as UnauthenticatedOauthCallbackRouteImport } from './routes/_unauthenticated/oauth-callback'
import { Route as UnauthenticatedLoginRouteImport } from './routes/_unauthenticated/login'
import { Route as UnauthenticatedForgottenPasswordRouteImport } from './routes/_unauthenticated/forgotten-password'
import { Route as AuthenticatedMeRouteImport } from './routes/_authenticated/me'
import { Route as UnauthenticatedResetPasswordCodeRouteImport } from './routes/_unauthenticated/reset-password.$code'

const UnauthenticatedRouteRoute = UnauthenticatedRouteRouteImport.update({
  id: '/_unauthenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedRouteRoute = AuthenticatedRouteRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedIndexRoute = AuthenticatedIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const UnauthenticatedOauthCallbackRoute =
  UnauthenticatedOauthCallbackRouteImport.update({
    id: '/oauth-callback',
    path: '/oauth-callback',
    getParentRoute: () => UnauthenticatedRouteRoute,
  } as any)
const UnauthenticatedLoginRoute = UnauthenticatedLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => UnauthenticatedRouteRoute,
} as any)
const UnauthenticatedForgottenPasswordRoute =
  UnauthenticatedForgottenPasswordRouteImport.update({
    id: '/forgotten-password',
    path: '/forgotten-password',
    getParentRoute: () => UnauthenticatedRouteRoute,
  } as any)
const AuthenticatedMeRoute = AuthenticatedMeRouteImport.update({
  id: '/me',
  path: '/me',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const UnauthenticatedResetPasswordCodeRoute =
  UnauthenticatedResetPasswordCodeRouteImport.update({
    id: '/reset-password/$code',
    path: '/reset-password/$code',
    getParentRoute: () => UnauthenticatedRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/me': typeof AuthenticatedMeRoute
  '/forgotten-password': typeof UnauthenticatedForgottenPasswordRoute
  '/login': typeof UnauthenticatedLoginRoute
  '/oauth-callback': typeof UnauthenticatedOauthCallbackRoute
  '/': typeof AuthenticatedIndexRoute
  '/reset-password/$code': typeof UnauthenticatedResetPasswordCodeRoute
}
export interface FileRoutesByTo {
  '/me': typeof AuthenticatedMeRoute
  '/forgotten-password': typeof UnauthenticatedForgottenPasswordRoute
  '/login': typeof UnauthenticatedLoginRoute
  '/oauth-callback': typeof UnauthenticatedOauthCallbackRoute
  '/': typeof AuthenticatedIndexRoute
  '/reset-password/$code': typeof UnauthenticatedResetPasswordCodeRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_authenticated': typeof AuthenticatedRouteRouteWithChildren
  '/_unauthenticated': typeof UnauthenticatedRouteRouteWithChildren
  '/_authenticated/me': typeof AuthenticatedMeRoute
  '/_unauthenticated/forgotten-password': typeof UnauthenticatedForgottenPasswordRoute
  '/_unauthenticated/login': typeof UnauthenticatedLoginRoute
  '/_unauthenticated/oauth-callback': typeof UnauthenticatedOauthCallbackRoute
  '/_authenticated/': typeof AuthenticatedIndexRoute
  '/_unauthenticated/reset-password/$code': typeof UnauthenticatedResetPasswordCodeRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/me'
    | '/forgotten-password'
    | '/login'
    | '/oauth-callback'
    | '/'
    | '/reset-password/$code'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/me'
    | '/forgotten-password'
    | '/login'
    | '/oauth-callback'
    | '/'
    | '/reset-password/$code'
  id:
    | '__root__'
    | '/_authenticated'
    | '/_unauthenticated'
    | '/_authenticated/me'
    | '/_unauthenticated/forgotten-password'
    | '/_unauthenticated/login'
    | '/_unauthenticated/oauth-callback'
    | '/_authenticated/'
    | '/_unauthenticated/reset-password/$code'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AuthenticatedRouteRoute: typeof AuthenticatedRouteRouteWithChildren
  UnauthenticatedRouteRoute: typeof UnauthenticatedRouteRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_unauthenticated': {
      id: '/_unauthenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof UnauthenticatedRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_unauthenticated/oauth-callback': {
      id: '/_unauthenticated/oauth-callback'
      path: '/oauth-callback'
      fullPath: '/oauth-callback'
      preLoaderRoute: typeof UnauthenticatedOauthCallbackRouteImport
      parentRoute: typeof UnauthenticatedRouteRoute
    }
    '/_unauthenticated/login': {
      id: '/_unauthenticated/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof UnauthenticatedLoginRouteImport
      parentRoute: typeof UnauthenticatedRouteRoute
    }
    '/_unauthenticated/forgotten-password': {
      id: '/_unauthenticated/forgotten-password'
      path: '/forgotten-password'
      fullPath: '/forgotten-password'
      preLoaderRoute: typeof UnauthenticatedForgottenPasswordRouteImport
      parentRoute: typeof UnauthenticatedRouteRoute
    }
    '/_authenticated/me': {
      id: '/_authenticated/me'
      path: '/me'
      fullPath: '/me'
      preLoaderRoute: typeof AuthenticatedMeRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_unauthenticated/reset-password/$code': {
      id: '/_unauthenticated/reset-password/$code'
      path: '/reset-password/$code'
      fullPath: '/reset-password/$code'
      preLoaderRoute: typeof UnauthenticatedResetPasswordCodeRouteImport
      parentRoute: typeof UnauthenticatedRouteRoute
    }
  }
}

interface AuthenticatedRouteRouteChildren {
  AuthenticatedMeRoute: typeof AuthenticatedMeRoute
  AuthenticatedIndexRoute: typeof AuthenticatedIndexRoute
}

const AuthenticatedRouteRouteChildren: AuthenticatedRouteRouteChildren = {
  AuthenticatedMeRoute: AuthenticatedMeRoute,
  AuthenticatedIndexRoute: AuthenticatedIndexRoute,
}

const AuthenticatedRouteRouteWithChildren =
  AuthenticatedRouteRoute._addFileChildren(AuthenticatedRouteRouteChildren)

interface UnauthenticatedRouteRouteChildren {
  UnauthenticatedForgottenPasswordRoute: typeof UnauthenticatedForgottenPasswordRoute
  UnauthenticatedLoginRoute: typeof UnauthenticatedLoginRoute
  UnauthenticatedOauthCallbackRoute: typeof UnauthenticatedOauthCallbackRoute
  UnauthenticatedResetPasswordCodeRoute: typeof UnauthenticatedResetPasswordCodeRoute
}

const UnauthenticatedRouteRouteChildren: UnauthenticatedRouteRouteChildren = {
  UnauthenticatedForgottenPasswordRoute: UnauthenticatedForgottenPasswordRoute,
  UnauthenticatedLoginRoute: UnauthenticatedLoginRoute,
  UnauthenticatedOauthCallbackRoute: UnauthenticatedOauthCallbackRoute,
  UnauthenticatedResetPasswordCodeRoute: UnauthenticatedResetPasswordCodeRoute,
}

const UnauthenticatedRouteRouteWithChildren =
  UnauthenticatedRouteRoute._addFileChildren(UnauthenticatedRouteRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRouteRoute: AuthenticatedRouteRouteWithChildren,
  UnauthenticatedRouteRoute: UnauthenticatedRouteRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
